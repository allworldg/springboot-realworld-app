<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="realworld.article.repository.ArticleMapper">
    <resultMap id="ArticleDto" type="realworld.article.ArticleDTO">
        <result property="slug" column="slug"/>
        <result property="body" column="body"/>
        <result property="description" column="description"/>
        <result property="title" column="title"/>
        <result property="createdAt" column="created_at"/>
        <association property="author" column="{userId=user_id,loginId=loginId}"
                     select="getAuthor"/>
        <association property="favorited" column="{loginId=loginId,articleId=id}"
                     select="getIsFavorited"/>
        <association property="favoritesCount" column="{articleId=id}"
                     select="getFavoritesCount"/>
        <collection property="tagList" column="{articleId=id}" javaType="arraylist"
                    ofType="string" select="getTagList"/>
    </resultMap>

    <sql id="getArticleIds">
        select distinct a.id, a.created_at
        from article as a
                 inner join user as u on a.user_id = u.id
                 left join user_favorite_article as ufa on ufa.article_id = a.id
                 left join user as uf on uf.id = ufa.user_id
                 left join tag_article as ta on ta.article_id = a.id
                 left join tag as t on t.id = ta.tag_id
    </sql>

    <select id="getArticleIds" resultType="java.lang.Long"
            parameterType="realworld.article.ArticlesParam">
        <include refid="getArticleIds"/>
        <where>
            <if test="param.author!=null">
                and u.username = #{param.author}
            </if>
            <if test="param.tag!=null">
                and t.name = #{param.tag}
            </if>
            <if test="param.favorited!=null">
                and uf.username = #{param.favorited}
            </if>
        </where>
        order by a.created_at desc
    </select>


    <select id="getArticleDtoList" resultMap="ArticleDto">
        select a.slug,
        u.username,
        a.body,
        a.description,
        a.title,
        a.created_at,
        a.user_id,
        a.id,
        #{loginId} as loginId
        from article as a
        inner join user as u
        on a.user_id = u.id
        <where>
            <if test="ids!=null">
                and a.id in
                <foreach collection="ids" open="(" index="index" separator="," item="articleId"
                         close=")">
                    #{articleId}
                </foreach>
            </if>
        </where>
        order by a.created_at desc
    </select>


    <select id="getArticleBySlug" resultMap="ArticleDto">
        select a.slug,
               u.username,
               a.body,
               a.description,
               a.title,
               a.created_at,
               a.user_id,
               a.id,
               #{loginId} as loginId
        from article as a
                 inner join user as u
                            on a.user_id = u.id
        where a.slug = #{slug}
    </select>

    <select id="getTagList" resultType="string">
        select t.name
        from tag as t
        inner join tag_article as ta
        on ta.tag_id = t.id
        inner join article as a on a.id = ta.article_id
        <where>
            <if test="articleId!=null">
                a.id = #{articleId}
            </if>
        </where>
    </select>

    <select id="getAuthor" resultType="realworld.user.Profile">
        select
        u.id,
        u.username,
        u.bio,
        u.image,
        exists(select 1
        from user_follow_user as ufu
        inner join user as u on u.id = ufu.follow_id
        where u.id = #{userId}
        <choose>
            <when test="loginId!=null">
                and ufu.user_id = #{loginId}
            </when>
            <otherwise>
                and ufu.user_id = 0
            </otherwise>
        </choose>
        ) as following
        from user as u where u.id = #{userId}
    </select>

    <select id="getIsFavorited" resultType="boolean">
        select count(1)
        from user_favorite_article as ufa
        inner join user as u on ufa.user_id = u.id
        inner join article as a on ufa.article_id=a.id
        where ufa.article_id=#{articleId}
        <choose>
            <when test="loginId!=null">
                and ufa.user_id=#{loginId}
            </when>
            <otherwise>
                and ufa.user_id=0
            </otherwise>
        </choose>
    </select>

    <select id="getFavoritesCount" resultType="int">
        select count(1)
        from user_favorite_article as ufa
                 inner join article as a on ufa.article_id = a.id
                 inner join user as u on ufa.user_id = u.id
        where ufa.article_id = #{articleId}
    </select>
    <select id="getFeedArticleIds" resultType="java.lang.Long">
        select a.id
        from article as a
                 inner join user_follow_user ufu on a.user_id = ufu.follow_id
                 join user as u on ufu.user_id = u.id
        where u.id = #{id}
    </select>


    <insert id="addFavorite">
        insert into user_favorite_article (user_id, article_id)
        values (#{userId}, #{articleId})
    </insert>

    <select id="isAlreadyFavorited" resultType="java.lang.Boolean">
        select count(1)
        from user_favorite_article as ufa
        where ufa.article_id = #{articleId}
          and ufa.user_id = #{userId}
    </select>

    <delete id="deleteFavorited">
        delete
        from user_favorite_article
        where user_id = #{userId}
          and article_id = #{articleId}
    </delete>
</mapper>

